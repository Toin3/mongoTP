% layout 'default';
<script>
var tabContains = function(tab, val)
{
	for(var i in tab)
		if(tab[i] == val)
			return true;
	return false;
}

var buildLine = function(counter)
{
	var line = '<div id="line_'+scope.length+'" class="line">';
	for(var entryIndex in counter)
	{
			var counts = counter[entryIndex];
			line += entryIndex;
			line += ' <a class="bracket" id="b.'+ scope.length + '.' +entryIndex+'" href="javascript:void(0);"> (' + counts['bracket'] + ')</a>';
			line += (counts['arrow'] > 0 ? ' <a class="arrow" id="a.'+ scope.length+ '.' +entryIndex+'" href="javascript:void(0);"><' + counts['arrow'] + '></a>' : '');
			line += (counts['square'] > 0 ? ' <a class="square" id="s.'+ scope.length+ '.' +entryIndex+'" href="javascript:void(0);">[' + counts['square'] + ']</a>' : '');
			line += (tabContains(loc2dIndexes, entryIndex) ? ' <img title = "Afficher la carte" entry='+entryIndex+' src="/ressources/world.png" class="display_map"/> ' : '');
			line += ', ';
	}
	line += '</div>';
	return line;
}


// ajout d'une ligne en fonction scope
var addLine = function()
{
	console.log('-----------------------------');
	
	var counter = new Object();
	var tmpCollection = completeCollection.slice(0); // duplicate data

	for(var collectionIndex in completeCollection)
	{
		tmpCollection = completeCollection[collectionIndex];
		for(var i in scope)
			tmpCollection = tmpCollection[scope[i]];
		
		for(var entryIndex in tmpCollection)
		{
			var entry = tmpCollection[entryIndex];
			/*
			if(typeof entry[0] === 'undefined')
			{	
				break;
			}
			*/
			
			
			if(!counter[entryIndex])
				counter[entryIndex] = new Object({bracket: 0, square: 0, arrow: 0});
			
			counter[entryIndex]['bracket']++;

			if(entry != null && entry instanceof Array)
								counter[entryIndex]['square']++;
			else if(entry != null && typeof entry === 'object')
                                counter[entryIndex]['arrow']++;
		}
	}

	return buildLine(counter);
}


var scope = new Array();
var completeCollection = eval(<%= $collection_content %>);
var loc2dIndexes = new Array();
$(document).ready(function()
{
	/* traitement des index2D... */
	var indexes = eval(<%= $collection_index %>);

	for(var i in indexes)
	{
		var key = indexes[i]['key'];
		for(var k in key)
			if(key[k] == "2d" || key[k] == "2D")
				loc2dIndexes.push(k);
	}	

	// first line
	$('#collection_content').html(addLine());
	


	/* () */
	$('body').delegate('.backet', 'click',function()
	{
		var query = '{"' + $(this).attr('id').split('.')[2] + '": {"$exists": 1}}';
		$('#shell_query').val(query);
		$('#shell_projection').val('');
		$.ajax({
  			type: "POST",
  			url: "/ajax/execute",
  			data: { query: query, projection: '' }
		}).done(function(data) {
  			console.log(eval(data));
		});
	});

	/* <> */
	$('body').delegate('.arrow', 'click', function()
	{
		var dId_spl = $(this).attr('id').split('.');

		{
			var query = '{"' + dId_spl[2] + '": {"$exists": 1}}';
            $('#shell_query').val(query);
			var projection = '{"' + dId_spl[2] + '":1}';
			$('#shell_projection').val(projection);
		}
		
		// on delete les lignes qui ne sont plus utiles
		$('div.line').each(function()
		{
			if($(this).attr('id').split('_')[1] > dId_spl[1])
                        {
                                $(this).remove();       
                                scope.pop();
                        }
		});		
        scope.push(dId_spl[2]);

		$('#collection_content').append(addLine());		
	});

	
	/* shell exec */
	$('#execute_command').click(function()
	{
		var query = $('#shell_query').val();
		var projection = $('#shell_projection').val();
		console.log(query);
		$.ajax({
                        type: "POST",
                        url: "/ajax/execute",
                        data: { query: query, projection: projection }
                }).done(function(data) {
                        console.log(eval(data));
                });
	});
});
</script>
<script type="text/javascript" src="/scripts/gmap.js"></script>
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&libraries=geometry"></script>
<h1>DÃ©tails de la collection <%= $collectionname %></h1>

<div id="collection_content">
</div>

<br /><br />

<center>
db.<%= $collectionname %>.find(
<textarea id="shell_query" name="mongo_req" cols="50" rows="2" ></textarea>,
<textarea id="shell_projection" name="mongo_proj" cols="50" rows="2" ></textarea>);
<br />
<input type="submit" id="execute_command" value="Executer la commande" />
</center>
<div id="map_aera">

</div>
